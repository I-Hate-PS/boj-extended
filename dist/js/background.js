function openSettingPage(){chrome.runtime.openOptionsPage()}class _Config{constructor(){this.storage="undefined"==typeof browser?chrome.storage.sync:browser.storage.sync,this.storageName="config",this.buffer={};const a=this;this.storage.get(this.storageName,function(b){b[a.storageName]&&(a.buffer=b[a.storageName])})}save(a,b,c){this.buffer[a]=b;const d={};d[this.storageName]=this.buffer,this.storage.set(d,function(){"function"==typeof c&&c(b)})}load(a,b){if(this.buffer[a]!==void 0)"function"==typeof b&&b(this.buffer[a]);else{const c=this.storageName;this.storage.get(c,function(d){"function"!=typeof b||(d&&d[c]?b(d[c][a]):b(null))})}}remove(a,b){if(this.buffer[a]!==void 0){delete this.buffer[a];const c={};c[this.storageName]=this.buffer,this.storage.set(c,function(){"function"==typeof b&&b(!0)})}else"function"==typeof b&&b(!1)}}const Config=new _Config,Problems={data:{},fetchFromRemote:function(){const a=this,b=new XMLHttpRequest;return b?void(b.onreadystatechange=function(){if(4==b.readyState&&200==b.status)try{const c=JSON.parse(b.responseText);if(!c)return void console.error("Can not fetch data from remote");const d=JSON.parse(localStorage.getItem("boj-extended-DB_PROBLEMS"));d&&d.last_updated&&c.last_updated==d.last_updated?a.data=d:(localStorage.setItem("boj-extended-DB_PROBLEMS",JSON.stringify(c)),a.data=c)}catch(a){console.error(a.message+" in "+b.responseText)}},b.open("GET","https://raw.githubusercontent.com/joonas-yoon/boj-extended/release/db.json"),b.send()):(console.error("Can not create XMLHTTP instance."),!1)},get:function(a){a(this.data.problems)}};Problems.fetchFromRemote(),chrome.runtime.onMessage.addListener(function(a,b,c){switch(a.action){case"openSettingPage":openSettingPage();break;case"config.save":Config.save(a.data.key,a.data.value,c);break;case"config.load":Config.load(a.data.key,c);break;case"config.load.problems":Problems.get(c);break;case"config.remove":Config.remove(a.data.key,c);break;default:}return!0});